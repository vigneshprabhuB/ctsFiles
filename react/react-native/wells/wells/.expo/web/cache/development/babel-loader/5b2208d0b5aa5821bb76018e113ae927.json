{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/804266/AdmHackathon/react/react-native/wells/wells/components/login/LoginPage.js\";\nimport React, { useState, Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { styles } from \"../Styles\";\nimport * as Google from 'expo-auth-session/providers/google';\nimport * as WebBrowser from 'expo-web-browser';\nWebBrowser.maybeCompleteAuthSession();\nexport function LoadLoginPage(_ref) {\n  var _route$params;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      userName = _React$useState2[0],\n      setUserName = _React$useState2[1];\n\n  var _Google$useAuthReques = Google.useAuthRequest({\n    expoClientId: '806471521542-7k36fosa636pickaes2q3gpkdh2tifcj.apps.googleusercontent.com',\n    androidClientId: '806471521542-5jnse22n0bn8ovklkllqo7db94n5k1qg.apps.googleusercontent.com',\n    webClientId: '806471521542-7k36fosa636pickaes2q3gpkdh2tifcj.apps.googleusercontent.com'\n  }, {\n    \"scheme\": \"wells\"\n  }),\n      _Google$useAuthReques2 = _slicedToArray(_Google$useAuthReques, 3),\n      request = _Google$useAuthReques2[0],\n      response = _Google$useAuthReques2[1],\n      promptAsync = _Google$useAuthReques2[2];\n\n  if ((_route$params = route.params) != null && _route$params.token) {}\n\n  React.useEffect(function () {\n    if ((response == null ? void 0 : response.type) === 'success') {\n      var authentication = response.authentication;\n      getProfileInfo(authentication.accessToken);\n    } else {\n      console.log(response);\n    }\n  }, [response]);\n\n  getProfileInfo = function getProfileInfo(accessToken) {\n    fetch('https://www.googleapis.com/oauth2/v1/userinfo?alt=json', {\n      'headers': {\n        'Authorization': 'Bearer ' + accessToken\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return setUserName(data.name);\n    }).then(function () {\n      return navigation.navigate('dashBoard');\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.top,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.loginForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.loginTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"SIGN IN \", userName), React.createElement(View, {\n    style: styles.loginButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    style: styles.loginButtonIn,\n    title: \"Sign In With Google\",\n    onPress: function onPress() {\n      promptAsync();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 42\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/804266/AdmHackathon/react/react-native/wells/wells/components/login/LoginPage.js"],"names":["React","useState","Component","styles","Google","WebBrowser","maybeCompleteAuthSession","LoadLoginPage","route","navigation","userName","setUserName","useAuthRequest","expoClientId","androidClientId","webClientId","request","response","promptAsync","params","token","useEffect","type","authentication","getProfileInfo","accessToken","console","log","fetch","then","json","data","name","navigate","container","top","loginForm","loginTitle","loginButton","loginButtonIn"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,SAASC,MAAT;AACA,OAAO,KAAKC,MAAZ,MAAwB,oCAAxB;AACA,OAAO,KAAKC,UAAZ,MAA4B,kBAA5B;AACAA,UAAU,CAACC,wBAAX;AAEA,OAAO,SAASC,aAAT,OAA8C;AAAA;;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAInD,wBAAgCT,KAAK,CAACC,QAAN,EAAhC;AAAA;AAAA,MAAOS,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,8BAAyCP,MAAM,CAACQ,cAAP,CAAsB;AAC7DC,IAAAA,YAAY,EAAE,0EAD+C;AAE7DC,IAAAA,eAAe,EAAE,0EAF4C;AAG7DC,IAAAA,WAAW,EAAE;AAHgD,GAAtB,EAItC;AAAE,cAAU;AAAZ,GAJsC,CAAzC;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,QAAhB;AAAA,MAA0BC,WAA1B;;AAMA,uBAAGV,KAAK,CAACW,MAAT,aAAG,cAAcC,KAAjB,EAAuB,CAEtB;;AACDpB,EAAAA,KAAK,CAACqB,SAAN,CAAgB,YAAM;AACpB,QAAI,CAAAJ,QAAQ,QAAR,YAAAA,QAAQ,CAAEK,IAAV,MAAmB,SAAvB,EAAkC;AAChC,UAAQC,cAAR,GAA2BN,QAA3B,CAAQM,cAAR;AACAC,MAAAA,cAAc,CAACD,cAAc,CAACE,WAAhB,CAAd;AAED,KAJD,MAIO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACD;AACF,GARD,EAQG,CAACA,QAAD,CARH;;AAUAO,EAAAA,cAAc,GAAC,wBAACC,WAAD,EAAe;AAC3BG,IAAAA,KAAK,CAAC,wDAAD,EAA2D;AAAE,iBAAW;AAAE,yBAAiB,YAAYH;AAA/B;AAAb,KAA3D,CAAL,CACAI,IADA,CACK,UAAAZ,QAAQ;AAAA,aAAIA,QAAQ,CAACa,IAAT,EAAJ;AAAA,KADb,EAEAD,IAFA,CAEK,UAAAE,IAAI;AAAA,aAAIpB,WAAW,CAACoB,IAAI,CAACC,IAAN,CAAf;AAAA,KAFT,EAGAH,IAHA,CAGK;AAAA,aAAMpB,UAAU,CAACwB,QAAX,CAAoB,WAApB,CAAN;AAAA,KAHL;AAIF,GALD;;AAOA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9B,MAAM,CAAC+B,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/B,MAAM,CAACgC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhC,MAAM,CAACiC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjC,MAAM,CAACkC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAyC3B,QAAzC,CADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACmC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEnC,MAAM,CAACoC,aAAtB;AAC/B,IAAA,KAAK,EAAC,qBADyB;AAE/B,IAAA,OAAO,EAAE,mBAAM;AACbrB,MAAAA,WAAW;AACZ,KAJ8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjC,CAFF,CAJF,CADF;AAgBD","sourcesContent":["import React, { useState, Component } from 'react';\nimport { Text, TextInput, View, Button } from 'react-native';\nimport { styles } from '../Styles';\nimport * as Google from 'expo-auth-session/providers/google';\nimport * as WebBrowser from 'expo-web-browser';\nWebBrowser.maybeCompleteAuthSession();\n\nexport function LoadLoginPage({ route, navigation }) {\n\n  \n\n  const [userName, setUserName] = React.useState();\n\n  const [request, response, promptAsync] = Google.useAuthRequest({\n    expoClientId: '806471521542-7k36fosa636pickaes2q3gpkdh2tifcj.apps.googleusercontent.com',\n    androidClientId: '806471521542-5jnse22n0bn8ovklkllqo7db94n5k1qg.apps.googleusercontent.com',\n    webClientId: '806471521542-7k36fosa636pickaes2q3gpkdh2tifcj.apps.googleusercontent.com',\n  }, { \"scheme\": \"wells\" });\n\n  if(route.params?.token){\n\n  }\n  React.useEffect(() => {\n    if (response?.type === 'success') {\n      const { authentication } = response;\n      getProfileInfo(authentication.accessToken);\n   \n    } else {\n      console.log(response);\n    }\n  }, [response]);\n\n  getProfileInfo=(accessToken)=>{\n     fetch('https://www.googleapis.com/oauth2/v1/userinfo?alt=json', { 'headers': { 'Authorization': 'Bearer ' + accessToken } })\n    .then(response => response.json())\n    .then(data => setUserName(data.name))\n    .then(() => navigation.navigate('dashBoard'));\n  }\n\n  return (\n    <View style={styles.container} >\n      <View style={styles.top}>\n\n      </View>\n      <View style={styles.loginForm}>\n        <Text style={styles.loginTitle}>SIGN IN {userName}</Text>\n        <View style={styles.loginButton}><Button style={styles.loginButtonIn}\n          title=\"Sign In With Google\"\n          onPress={() => {\n            promptAsync();\n          }}\n        /></View>\n      </View>\n    </View>);\n\n}\n"]},"metadata":{},"sourceType":"module"}