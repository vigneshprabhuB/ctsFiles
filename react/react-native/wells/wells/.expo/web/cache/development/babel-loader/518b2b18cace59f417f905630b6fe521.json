{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as SecureStore from 'expo-secure-store';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport function saveInStore(key, value) {\n  return _regeneratorRuntime.async(function saveInStore$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(Platform.OS === 'web')) {\n            _context.next = 12;\n            break;\n          }\n\n          debugger;\n          _context.prev = 2;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, value));\n\n        case 5:\n          _context.next = 10;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](2);\n          console.log(_context.t0);\n\n        case 10:\n          _context.next = 14;\n          break;\n\n        case 12:\n          _context.next = 14;\n          return _regeneratorRuntime.awrap(SecureStore.setItemAsync(key, value));\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[2, 7]], Promise);\n}\nexport function getValueFromStore(key) {\n  var result;\n  return _regeneratorRuntime.async(function getValueFromStore$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          result = null;\n\n          if (!(Platform.OS === 'web')) {\n            _context2.next = 13;\n            break;\n          }\n\n          _context2.prev = 2;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n        case 5:\n          result = _context2.sent;\n          _context2.next = 11;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](2);\n          console.log(_context2.t0);\n\n        case 11:\n          _context2.next = 23;\n          break;\n\n        case 13:\n          _context2.prev = 13;\n          _context2.next = 16;\n          return _regeneratorRuntime.awrap(SecureStore.getItemAsync(key));\n\n        case 16:\n          result = _context2.sent;\n          _context2.next = 22;\n          break;\n\n        case 19:\n          _context2.prev = 19;\n          _context2.t1 = _context2[\"catch\"](13);\n          console.log(_context2.t1);\n\n        case 22:\n          return _context2.abrupt(\"return\", result);\n\n        case 23:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[2, 8], [13, 19]], Promise);\n}","map":{"version":3,"sources":["/Users/804266/AdmHackathon/react/react-native/wells/wells/helper/CommonUtil.js"],"names":["SecureStore","AsyncStorage","saveInStore","key","value","Platform","OS","setItem","console","log","setItemAsync","getValueFromStore","result","getItem","getItemAsync"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,mBAA7B;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AAIA,OAAO,SAAeC,WAAf,CAA2BC,GAA3B,EAAgCC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,gBACCC,QAAQ,CAACC,EAAT,KAAgB,KADjB;AAAA;AAAA;AAAA;;AAEC;AAFD;AAAA;AAAA,2CAIWL,YAAY,CAACM,OAAb,CAAqBJ,GAArB,EAA0BC,KAA1B,CAJX;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMKI,UAAAA,OAAO,CAACC,GAAR;;AANL;AAAA;AAAA;;AAAA;AAAA;AAAA,2CASOT,WAAW,CAACU,YAAZ,CAAyBP,GAAzB,EAA8BC,KAA9B,CATP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcP,OAAO,SAAeO,iBAAf,CAAiCR,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AACCS,UAAAA,MADD,GACU,IADV;;AAAA,gBAECP,QAAQ,CAACC,EAAT,KAAgB,KAFjB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,2CAIoBL,YAAY,CAACY,OAAb,CAAqBV,GAArB,CAJpB;;AAAA;AAIKS,UAAAA,MAJL;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMKJ,UAAAA,OAAO,CAACC,GAAR;;AANL;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,2CAUoBT,WAAW,CAACc,YAAZ,CAAyBX,GAAzB,CAVpB;;AAAA;AAUKS,UAAAA,MAVL;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYKJ,UAAAA,OAAO,CAACC,GAAR;;AAZL;AAAA,4CAgBQG,MAhBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import * as SecureStore from 'expo-secure-store';\nimport { Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n\n\nexport async function saveInStore(key, value) {\n    if (Platform.OS === 'web') {\n        debugger\n        try {\n            await AsyncStorage.setItem(key, value);\n        } catch (e) {\n            console.log(e);\n        }\n    } else {\n        await SecureStore.setItemAsync(key, value);\n    }\n}\n\n\nexport async function getValueFromStore(key) {\n    let result = null;\n    if (Platform.OS === 'web') {\n        try {\n            result = await AsyncStorage.getItem(key);\n        } catch (e) {\n            console.log(e);\n        }\n    } else {\n        try {\n            result = await SecureStore.getItemAsync(key);\n        } catch (e) {\n            console.log(e);\n        }\n\n\n        return result;\n\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}