{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/804266/AdmHackathon/react/react-native/wells/wells/components/login/LoginPage.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { styles } from \"../Styles\";\nimport * as Google from 'expo-auth-session/providers/google';\nimport * as WebBrowser from 'expo-web-browser';\nimport * as LoacalStore from \"../../helper/CommonUtil\";\nimport * as Constants from \"../constant\";\nWebBrowser.maybeCompleteAuthSession();\nexport function LoadLoginPage(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      userName = _React$useState2[0],\n      setUserName = _React$useState2[1];\n\n  var _Google$useAuthReques = Google.useAuthRequest({\n    expoClientId: '806471521542-7k36fosa636pickaes2q3gpkdh2tifcj.apps.googleusercontent.com',\n    androidClientId: '806471521542-5jnse22n0bn8ovklkllqo7db94n5k1qg.apps.googleusercontent.com',\n    webClientId: '806471521542-7k36fosa636pickaes2q3gpkdh2tifcj.apps.googleusercontent.com'\n  }, {\n    \"scheme\": \"wells\"\n  }),\n      _Google$useAuthReques2 = _slicedToArray(_Google$useAuthReques, 3),\n      request = _Google$useAuthReques2[0],\n      response = _Google$useAuthReques2[1],\n      promptAsync = _Google$useAuthReques2[2];\n\n  React.useEffect(function () {\n    if ((response == null ? void 0 : response.type) === 'success') {\n      var authentication = response.authentication;\n      setProfileInfo(authentication.accessToken);\n    } else {\n      console.log(response);\n    }\n  }, [response]);\n\n  var setProfileInfo = function setProfileInfo(accessToken) {\n    fetch('https://www.googleapis.com/oauth2/v1/userinfo?alt=json', {\n      'headers': {\n        'Authorization': 'Bearer ' + accessToken\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function _callee(data) {\n      var UserModal;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(data);\n              UserModal = {\n                \"userName\": \"\",\n                \"emailId\": \"\",\n                \"profile\": \"\"\n              };\n              UserModal.userName = data.name;\n              UserModal.emailId = data.email;\n              UserModal.profile = data.picture;\n              LoacalStore.saveInStore(Constants.USER_DATA, JSON.stringify(UserModal));\n              _context.t0 = console;\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(LoacalStore.getValueFromStore(Constants.USER_DATA));\n\n            case 9:\n              _context.t1 = _context.sent;\n\n              _context.t0.log.call(_context.t0, _context.t1);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.top,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.loginForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.loginTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"SIGN IN \"), React.createElement(Text, {\n    style: styles.loginButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \" \", userName), React.createElement(View, {\n    style: styles.loginButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    style: styles.loginButtonIn,\n    title: \"Sign In With Google\",\n    onPress: function onPress() {\n      promptAsync();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 42\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/804266/AdmHackathon/react/react-native/wells/wells/components/login/LoginPage.js"],"names":["React","useState","Component","styles","Google","WebBrowser","LoacalStore","Constants","maybeCompleteAuthSession","LoadLoginPage","route","navigation","userName","setUserName","useAuthRequest","expoClientId","androidClientId","webClientId","request","response","promptAsync","useEffect","type","authentication","setProfileInfo","accessToken","console","log","fetch","then","json","data","UserModal","name","emailId","email","profile","picture","saveInStore","USER_DATA","JSON","stringify","getValueFromStore","container","top","loginForm","loginTitle","loginButton","loginButtonIn"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react';\nimport { Text, TextInput, View, Button } from 'react-native';\nimport { styles } from '../Styles';\nimport * as Google from 'expo-auth-session/providers/google';\nimport * as WebBrowser from 'expo-web-browser';\nimport *  as LoacalStore from '../../helper/CommonUtil';\nimport *  as Constants from '../constant';\n\n\nWebBrowser.maybeCompleteAuthSession();\nexport function LoadLoginPage({ route, navigation }) {\n\n\n\n  const [userName, setUserName] = React.useState();\n\n  const [request, response, promptAsync] = Google.useAuthRequest({\n    expoClientId: '806471521542-7k36fosa636pickaes2q3gpkdh2tifcj.apps.googleusercontent.com',\n    androidClientId: '806471521542-5jnse22n0bn8ovklkllqo7db94n5k1qg.apps.googleusercontent.com',\n    webClientId: '806471521542-7k36fosa636pickaes2q3gpkdh2tifcj.apps.googleusercontent.com',\n  }, { \"scheme\": \"wells\" });\n\n\n  React.useEffect(() => {\n\n\n    if (response?.type === 'success') {\n      const { authentication } = response;\n      setProfileInfo(authentication.accessToken);\n\n    } else {\n      console.log(response);\n    }\n\n  },[response]);\n\n\n  let setProfileInfo =  function (accessToken) {\n    fetch('https://www.googleapis.com/oauth2/v1/userinfo?alt=json', { 'headers': { 'Authorization': 'Bearer ' + accessToken } })\n      .then(response => response.json())\n      .then(async data => {\n        console.log(data);\n       let UserModal={\"userName\":\"\",\"emailId\":\"\",\"profile\":\"\"}\n        UserModal.userName=data.name;\n        UserModal.emailId=data.email;\n        UserModal.profile=data.picture;\n        LoacalStore.saveInStore(Constants.USER_DATA,JSON.stringify(UserModal));\n        console.log(await LoacalStore.getValueFromStore(Constants.USER_DATA));\n      });\n\n    //.then(() => navigation.navigate('dashBoard'));\n  }\n\n\n  return (\n    <View style={styles.container} >\n      <View style={styles.top}>\n\n      </View>\n      <View style={styles.loginForm}>\n        <Text style={styles.loginTitle}>SIGN IN </Text>\n        <Text style={styles.loginButton}> {userName}</Text>\n\n\n        <View style={styles.loginButton}><Button style={styles.loginButtonIn}\n          title=\"Sign In With Google\"\n          onPress={() => {\n            promptAsync();\n          }}\n\n        />\n        </View></View>\n    </View>);\n\n}\n"]},"metadata":{},"sourceType":"module"}